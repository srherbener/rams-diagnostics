#!/usr/bin/env perl
#
# Script to run diag_filter on a list of simulation cases
#

BEGIN { push(@INC, "$ENV{HOME}/etc/perl"); }

use strict;
use File::Basename;
use DiagUtils;

#######################################################################
# SUBROUTINES
#######################################################################

#######################################################################
# MAIN
#######################################################################

my $ConfigFile;
my $Nprocs;

my $Config;

my @CaseList;
my $Case;

my %DiagFilterJobs;
my $Fname;
my $CombSense;
my $SubSmotion;
my @SpecList;
my $Spec;
my $ifile;

my @DiagFilterCmds;
my $icmd;

my @SysArgs;
my $iarg;

if ($#ARGV != 1)
  {
  print "ERROR: must supply exactly two arguments\n";
  print "\n";
  print "USAGE: run_diag_filter <ConfigFile> <NumberProcesses>\n";
  exit -1;
  }

$ConfigFile = $ARGV[0];
$Nprocs = $ARGV[1];

print "Run diag_filter diagnostic jobs\n";
print "  Configuration file: $ConfigFile\n";
print "  Number of processes: $Nprocs\n";
print "\n";

# Read in info from the config file.
($Config) = &DiagUtils::ReadDiagConfigFile($ConfigFile);

# Walk through all cases and all diag_filter jobs and construct the
# corresponding list of diag_filter commands. 
#
# Divide the total number of diag_filter commands evenly by the 
# requested number of processes and run each subset in
# separate processes.

@CaseList = @{ $$Config{CASE_LIST} };
%DiagFilterJobs = %{ $$Config{FILTER} };

foreach $Case (@CaseList)
  {
  foreach $Fname (sort(keys(%DiagFilterJobs)))
    {
    # Grab the job specs
    $CombSense = $DiagFilterJobs{$Fname}{COMB_SENSE};
    @SpecList  = @{ $DiagFilterJobs{$Fname}{SPEC_LIST} };

    $iarg = 0;
    undef @SysArgs;
    $SysArgs[$iarg++] = "diag_filter"; 
    $SysArgs[$iarg++] = "-c";
    $SysArgs[$iarg++] = $CombSense;
    foreach $ifile (0 .. $#SpecList)
      {
      $Spec = $SpecList[$ifile];
      $Spec =~ s/<CASE>/$Case/g;
      $SysArgs[$iarg++] = $Spec;
      }

    # Add the command line to the main list
    $DiagFilterCmds[$icmd++] = [ @SysArgs ];
    }
  }

# Submit the jobs
&DiagUtils::SubmitParallelJobs(\@DiagFilterCmds, $Nprocs, "diag_filter");

exit 0;
